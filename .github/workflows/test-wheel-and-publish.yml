name: Test Wheel and Publish
on:
  workflow_call:
    inputs:
      build-label:
        description: "requested runner label"
        type: string
        required: true
      whl:
        type: string
        required: true
      python:
        type: string
      dev:
        type: string
        required: true 
      release:
        type: string
        required: true

  jobs:
    test-wheel-and-publish:
      runs-on: ${{ inputs.build-label }}
      steps:
        - uses: actions/setup-python@v4
          with:
            python-version: ${{ inputs.python }}
        - name: Install uv
          run: pip install uv # uv is needed to install the wheel with uv pip

        - name: Login to s3
          uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: ${{ secrets.AWS_WEBIDENTITY_FOR_GITHUB_ACTIONS }}
            aws-region: us-east-1

        - name: Make directory for wheel
          run: mkdir dist_s3

        - name: Pull from s3
          uses: neuralmagic/nm-actions/actions/s3_pull@main
          with:
            filename: ${{ inputs.whl }}
            dst: dist_s3

        - name: Fetch name of whl
          run: echo "FILENAME=$(echo dist_s3/*.whl)" >> $GITHUB_ENV

        - name: Install whl
          run: uv pip install $FILENAME[dev,onnxruntime,torch,torchvision,transformers]

        - name: Checkout code # Checkout repo to access Makefile for tests
          uses: actions/checkout@v4

        - name: Remove src files and run tests
          run: |
            pwd
            rm -rf src
            # TODO: Ensure 'make test' respects RUN_GPU_TESTS environment variable
            # or a similar mechanism if GPU tests need to be conditionally skipped.
            # This workflow is called by test-check.yaml which sets RUN_GPU_TESTS.
            # If RUN_GPU_TESTS is 'false', GPU-specific tests should be skipped.
            uv run make test

        - name: Publish Nightly Wheel
      if: ${{ inputs.DEV == 'false' && inputs.RELEASE == 'false'}}
      uses: neuralmagic/nm-actions/actions/publish-whl@main
      with:
        username: ${{ secrets.PYPI_PUBLIC_USER }}
        password: ${{ secrets.PYPI_PUBLIC_AUTH }}
        whl: ./$FILENAME