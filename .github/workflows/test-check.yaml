name: Test Checks
on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main
      - 'release/*'
  workflow_dispatch:
    inputs:
      run-gpu-tests:
        description: 'Run GPU tests'
        required: false
        default: 'false'
        type: boolean

env:
  RUN_GPU_TESTS: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.run-gpu-tests == 'true') || 'false' }}

jobs:
  test-setup:
    runs-on: ubuntu-22.04
    outputs:
      branch: ${{ steps.get-branch.outputs.branch }}
      base: ${{ steps.base-check.outputs.output }}
      deepsparse: ${{ steps.deepsparse-check.outputs.output }}
      onnx: ${{ steps.onnx-check.outputs.output }}
      pytorch: ${{ steps.pytorch-check.outputs.output }}
      export: ${{ steps.export-check.outputs.output }}
      transformers: ${{ steps.transformers-check.outputs.output }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git branch --show-current
      - name: Get current branch
        id: get-branch
        run: |
          BRANCH_NAME=$(git branch --show-current)
          if [[ $BRANCH_NAME =~ release/ ]]; then
            echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          else
            echo "branch=main" >> $GITHUB_OUTPUT
          fi
      - name: "Checking if sparseml was changed"
        id: base-check
        run: |
          echo "output=$(((git diff --name-only origin/${{ github.base_ref || 'main' }} HEAD | grep -E "[src|tests]/sparseml|setup.py|.github") || \
          (echo $GITHUB_REF | grep -E "refs/heads/(release/|main)"))) && echo 1 || echo 0)" >> $GITHUB_OUTPUT
      - name: "Checking if sparseml.deepsparse was changed"
        id: deepsparse-check
        run: |
          echo "output=$(((git diff --name-only origin/${{ github.base_ref || 'main' }} HEAD | grep -E "[src|tests]/sparseml/deepsparse|setup.py|.github") || \
          (echo $GITHUB_REF | grep -E "refs/heads/(release/|main)"))) && echo 1 || echo 0)" >> $GITHUB_OUTPUT
      - name: "Checking if sparseml.onnx was changed"
        id: onnx-check
        run: |
          echo "output=$(((git diff --name-only origin/${{ github.base_ref || 'main' }} HEAD | grep -E "[src|tests]/sparseml/onnx|setup.py|.github") || \
          (echo $GITHUB_REF | grep -E "refs/heads/(release/|main)"))) && echo 1 || echo 0)" >> $GITHUB_OUTPUT
      - name: "Checking if sparseml.pytorch was changed"
        id: pytorch-check
        run: |
          echo "output=$(((git diff --name-only origin/${{ github.base_ref || 'main' }} HEAD | grep -E "[src|tests]/sparseml/modifiers|pytorch|setup.py|.github") || \
          (echo $GITHUB_REF | grep -E "refs/heads/(release/|main)"))) && echo 1 || echo 0)" >> $GITHUB_OUTPUT
      - name: "Checking if sparseml.export was changed"
        id: export-check
        run: |
          echo "output=$(((git diff --name-only origin/${{ github.base_ref || 'main' }} HEAD | grep -E "[src|tests]/sparseml/export|setup.py|.github") || \
          (echo $GITHUB_REF | grep -E "refs/heads/(release/|main)"))) && echo 1 || echo 0)" >> $GITHUB_OUTPUT
      - name: "Checking if sparseml.transformers was changed"
        id: transformers-check
        run: |
          echo "output=$(((git diff --name-only origin/${{ github.base_ref || 'main' }} HEAD | grep -E "[src|tests]/sparseml/transformers|setup.py|.github") || \
          (echo $GITHUB_REF | grep -E "refs/heads/(release/|main)"))) && echo 1 || echo 0)" >> $GITHUB_OUTPUT
  base-tests:
    runs-on: ubuntu-22.04
    env:
      SPARSEZOO_TEST_MODE: "false"
    needs: test-setup
    if: ${{needs.test-setup.outputs.base == 1}}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev --extra onnxruntime
      - name: "üî¨ Running base tests"
        run: uv run make test
  deepsparse-tests:
    runs-on: ubuntu-22.04
    env:
      SPARSEZOO_TEST_MODE: "false"
    needs: test-setup
    if: ${{needs.test-setup.outputs.deepsparse == 1}}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev --extra deepsparse --extra onnxruntime
      - name: "üî¨ Running deepsparse tests"
        run: uv run make test TARGETS=deepsparse
  onnx-tests:
    runs-on: ubuntu-22.04
    env:
      SPARSEZOO_TEST_MODE: "false"
    needs: test-setup
    if: ${{needs.test-setup.outputs.onnx == 1}}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev --extra torchvision --extra onnxruntime
      - name: "üî¨ Running onnx tests"
        run: uv run make test TARGETS=onnx
  pytorch-tests:
    runs-on: k8s-eng-gpu-64G-v100-32G
    env:
      SPARSEZOO_TEST_MODE: "false"
      CLEARML_WEB_HOST: ${{ secrets.CLEARML_WEB_HOST }}
      CLEARML_API_HOST: ${{ secrets.CLEARML_API_HOST }}
      CLEARML_API_ACCESS_KEY: ${{ secrets.CLEARML_API_ACCESS_KEY }}
      CLEARML_FILES_HOST:  ${{ secrets.CLEARML_FILES_HOST }}
      CLEARML_API_SECRET_KEY:  ${{ secrets.CLEARML_API_SECRET_KEY }}
    needs: test-setup
    # Run if pytorch files changed AND (RUN_GPU_TESTS is true for push/pull_request OR run-gpu-tests input is true for workflow_dispatch)
    if: ${{ needs.test-setup.outputs.pytorch == 1 && (env.RUN_GPU_TESTS == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.run-gpu-tests == true)) }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/compressed-tensors"
          path: "compressed-tensors"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install compressed-tensors dependencies"
        run: uv pip install setuptools compressed-tensors/
      - name: "Clean compressed-tensors directory"
        run: rm -r compressed-tensors/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev --extra torchvision --extra onnxruntime --extra transformers
      - name: "üî¨ Running pytorch tests"
        run: uv run make test TARGETS=pytorch
  compat-pytorch-1_9-pytorch-tests:
    runs-on: k8s-eng-gpu-64G-v100-32G
    env:
      SPARSEZOO_TEST_MODE: "false"
      CLEARML_WEB_HOST: ${{ secrets.CLEARML_WEB_HOST }}
      CLEARML_API_HOST: ${{ secrets.CLEARML_API_HOST }}
      CLEARML_API_ACCESS_KEY: ${{ secrets.CLEARML_API_ACCESS_KEY }}
      CLEARML_FILES_HOST:  ${{ secrets.CLEARML_FILES_HOST }}
      CLEARML_API_SECRET_KEY:  ${{ secrets.CLEARML_API_SECRET_KEY }}
    needs: test-setup
    # Run if pytorch files changed AND (RUN_GPU_TESTS is true for push/pull_request OR run-gpu-tests input is true for workflow_dispatch)
    if: ${{ needs.test-setup.outputs.pytorch == 1 && (env.RUN_GPU_TESTS == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.run-gpu-tests == true)) }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/compressed-tensors"
          path: "compressed-tensors"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install compressed-tensors dependencies"
        run: uv pip install setuptools compressed-tensors/
      - name: "Clean compressed-tensors directory"
        run: rm -r compressed-tensors/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev --extra torchvision --extra onnxruntime --extra transformers
      - name: "üî¨ Running pytorch tests"
        run: uv run make test TARGETS=pytorch
  compat-pytorch-1_9-onnx-tests:
    runs-on: ubuntu-22.04
    env:
      SPARSEZOO_TEST_MODE: "false"
    needs: test-setup
    if: ${{needs.test-setup.outputs.onnx == 1}}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev --extra torchvision --extra onnxruntime && uv pip install torch
      - name: "üî¨ Running onnx tests"
        run: uv run make test TARGETS=onnx
  transformers-tests:
    runs-on: k8s-eng-gpu-64G-v100-32G
    env:
      SPARSEZOO_TEST_MODE: "false"
      CLEARML_WEB_HOST: ${{ secrets.CLEARML_WEB_HOST }}
      CLEARML_API_HOST: ${{ secrets.CLEARML_API_HOST }}
      CLEARML_API_ACCESS_KEY: ${{ secrets.CLEARML_API_ACCESS_KEY }}
      CLEARML_FILES_HOST:  ${{ secrets.CLEARML_FILES_HOST }}
      CLEARML_API_SECRET_KEY:  ${{ secrets.CLEARML_API_SECRET_KEY }}
    needs: test-setup
    # Run if transformers files changed AND (RUN_GPU_TESTS is true for push/pull_request OR run-gpu-tests input is true for workflow_dispatch)
    if: ${{ needs.test-setup.outputs.transformers == 1 && (env.RUN_GPU_TESTS == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.run-gpu-tests == true)) }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - uses: actions/checkout@v2
        with:
          repository: "neuralmagic/compressed-tensors"
          path: "compressed-tensors"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install compressed-tensors dependencies"
        run: uv pip install setuptools compressed-tensors/
      - name: "Clean compressed-tensors directory"
        run: rm -r compressed-tensors/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev --extra torch --extra transformers --extra onnxruntime
      - name: "üî¨ Running transformers tests"
        run: uv run make test TARGETS=transformers
  export-tests:
    runs-on: ubuntu-22.04
    env:
      SPARSEZOO_TEST_MODE: "false"
    needs: test-setup
    if: ${{needs.test-setup.outputs.export == 1}}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - uses: actions/checkout@v2
        with:
          repository: "neuralmagic/compressed-tensors"
          path: "compressed-tensors"
          ref: ${{needs.test-setup.outputs.branch}}
      - name: "‚öôÔ∏è Install compressed-tensors dependencies"
        run: uv pip install setuptools compressed-tensors/
      - name: "Clean compressed-tensors directory"
        run: rm -r compressed-tensors/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev --extra torch --extra transformers --extra torchvision --extra onnxruntime
      - name: "üî¨ Running export tests"
        run: uv run make test TARGETS=export

  quality-tests:
    runs-on: ubuntu-22.04
    needs: test-setup
    # Run if base files changed OR if manually dispatched
    if: ${{ needs.test-setup.outputs.base == 1 || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          # Use the branch from the test-setup job
          ref: ${{ needs.test-setup.outputs.branch }}
      - name: "‚öôÔ∏è Install sparsezoo dependencies"
        run: uv pip install sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "‚öôÔ∏è Install dependencies"
        run: uv sync --extra dev
      - name: "üßπ Running quality checks"
        run: uv run make quality
