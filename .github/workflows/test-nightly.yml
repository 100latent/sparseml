name: Run Nightly Tests
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      run-gpu-tests:
        description: 'Run GPU tests'
        required: false
        default: false # Explicitly boolean false
        type: boolean
  schedule:
    - cron: '0 1 * * *' # Run daily at 1 AM UTC

jobs:
  test-nightly-tests:
    # Set ACTUAL_RUN_GPU_TESTS: true for scheduled runs, otherwise use the input
    # The job runs if ACTUAL_RUN_GPU_TESTS is true.
    if: ${{ env.ACTUAL_RUN_GPU_TESTS == 'true' }}
    runs-on: k8s-mle-gpu-12-vcpu-225GB-ram-2-a6000-48G
    env:
      CADENCE: "nightly"
      CLEARML_WEB_HOST: ${{ secrets.CLEARML_WEB_HOST }}
      CLEARML_API_HOST: ${{ secrets.CLEARML_API_HOST }}
      CLEARML_API_ACCESS_KEY: ${{ secrets.CLEARML_API_ACCESS_KEY }}
      CLEARML_FILES_HOST:  ${{ secrets.CLEARML_FILES_HOST }}
      CLEARML_API_SECRET_KEY:  ${{ secrets.CLEARML_API_SECRET_KEY }}
      # Determine if GPU tests should run based on trigger type
      ACTUAL_RUN_GPU_TESTS: ${{ (github.event_name == 'schedule') || inputs.run-gpu-tests }}
    steps:
      - name: Set Run Condition
        run: echo "ACTUAL_RUN_GPU_TESTS=${{ (github.event_name == 'schedule') || inputs.run-gpu-tests }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          repository: "neuralmagic/compressed-tensors"
          path: "compressed-tensors"
          # Assuming 'main' is the correct default if test-setup is not a dependency here
          ref: main
      - name: Install uv
        run: |
          pip install uv
          uv sync
      - name: "⚙️ Install compressed-tensors dependencies"
        run: uv pip install setuptools compressed-tensors/
      - name: "Clean compressed-tensors directory"
        run: rm -r compressed-tensors/
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: "⚙️ Install dependencies"
        run: uv sync --extra dev --extra onnxruntime --extra torch --extra torchvision --extra transformers
      - name: Run oneshot tests
        run: |
          uv run pytest tests/sparseml/transformers/obcq -m integration
      - name: Run finetune tests
        run: |
          uv run pytest tests/sparseml/transformers/finetune -m integration
